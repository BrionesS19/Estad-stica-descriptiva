---
title: "Estadística Descriptiva. Gráficas Variables Cuantitativas."
format: 
  html:
    grid: 
      body-width: 950px
editor: visual
lang: es
---

```{r}
#| code-fold: true
#| warning: false
#| message: false

library(tidyverse)
library(sf)          # Para datos espaciales
library(viridis)     # Para paletas de colores
library(janitor)    # Para limpiar nombres de columnas
library(scales)     # Para mejorar ejes en gráficos

```

# Datos espaciales de Coahuila

```{r municipios}
#| code-fold: true
#| fig-width: 7
#| fig-align: center

#municipios_coahuila <- st_read("C:/Users/LENOVO/Desktop/estadistica_descriptiva/data/conjunto_de_datos", options = "ENCODING=LATIN1", quiet = TRUE)
municipios_coahuila <- st_read("C:/Users/LENOVO/Desktop/estadistica_descriptiva/data/conjunto_de_datos/05mun.shp", options = "ENCODING=LATIN1", quiet = TRUE)

# Crear mapa de municipios de Coahuila
mapa_municipios <- ggplot(municipios_coahuila) +
  geom_sf(fill = "blue", color = "black", size = 0.3) +
  labs(
    title = "Municipios de Coahuila",
    subtitle = paste("Total de municipios:", nrow(municipios_coahuila)),
    caption = "Fuente: INEGI - Marco Geoestadístico"
  ) +
  theme_void() +
  theme(
    plot.title = element_text(size = 16, face = "bold"),
    plot.subtitle = element_text(size = 12),
    plot.caption = element_text(size = 10)
  )

print(mapa_municipios)
```

# Fuente de datos: INEGI

Para este ejemplo, utilizaremos los datos del **Instituto Nacional de Estadística y Geografía (INEGI)** de México. Específicamente, los Censos y Conteos de Población y Vivienda disponible en:

**Enlace de descarga**: https://inegi.org.mx/app/descarga/

Buscar: Estado. Seleccionar: Programas \> Censos y Conteos de Población y Vivienda \> 2020 \> Indicadores 1900-2020 y descargar el archivo CSV.

Extraer el archivo `cpv_valor_14.csv` y guardarlo en la carpeta `data/`.

# Lectura de datos

Carguemos los datos de población y vivienda para el año 2020, filtrando por algunos indicadores relevantes:

-   Tasa de alfabetización de las personas de 15 a 24 años
-   Población derechohabiente a servicios de salud
-   Grado promedio de escolaridad de la población de 15 y más años
-   Índice de envejecimiento
-   Edad mediana muejeres

```{r}
#| code-fold: true
#| warning: false
#| message: false

#datos_total <- read_csv("C:/Users/LENOVO/Desktop/estadistica_descriptiva/data/conjunto_de_datos/cpv_valor_05", na = c("ND"))
datos_total <- read_csv("C:/Users/LENOVO/Desktop/estadistica_descriptiva/data/conjunto_de_datos/cpv_valor_05.csv", na = c("ND"))


datos_total <- datos_total |> filter(año == 2020)
#table(datos_total$indicador)
datos_seleccion <- datos_total |> 
  filter(indicador %in% c("Tasa de alfabetización de las personas de 15 a 24 años", "Población derechohabiente a servicios de salud", "Grado promedio de escolaridad de la población de 15 y más años", "Índice de envejecimiento", "Edad mediana mujeres"), desc_municipio != "Estatal") |> 
  select(desc_municipio, indicador, valor)
```

Cambiamos el formato de los datos para que cada indicador sea una columna separada, facilitando el análisis posterior. Además, limpiamos los nombres de las columnas para que sean más manejables y creamos una columna `NOMGEO` para poder unir los datos espaciales con los datos de población y vivienda.

```{r}
#| code-fold: true
#| warning: false
#| message: false

datos <- datos_seleccion |>
    pivot_wider(names_from = indicador, values_from = valor) 

datos <- datos |> 
  clean_names() 

# Corrección de nombres de municipios

datos <- datos |> 
  mutate(desc_municipio = if_else(desc_municipio == "Saltillo", "Saltillo", desc_municipio))

datos <- datos |> 
  mutate(NOMGEO = desc_municipio)
```

# Estadísticas descriptivas

Ahora que tenemos nuestros datos preparados, podemos realizar un resumen numérico de las variables cuantitativas. Para ello, utilizaremos la función `summary()` de R, que nos proporcionará un resumen estadístico de cada variable, incluyendo la media, mediana, mínimo, máximo y cuartiles. Hay que agregar las demás medidas de dispersión analizadas en clase (desviación media, varianza, rango, etc.) para cada variable cuantitativa.

```{r}
#| code-fold: true

summary(datos)
```

Se unen los datos geograficos de los municipios de Coahuila con los datos de población y vivienda. Esto nos permitirá crear mapas y realizar análisis espaciales. Para preservar la integridad de los datos, utilizamos `left_join()` de `dplyr`, el primer conjunto de datos debe ser el que contenga la columna `geometry`.

```{r}
#| code-fold: true

datos <- left_join(municipios_coahuila, datos)
```

## **Tasa de alfabetización de las personas de 15 a 24 años**

```{r}
#| code-fold: true
#| fig-width: 8
#| fig-align: center


ggplot(datos) +
  geom_sf(aes(fill = tasa_de_alfabetizacion_de_las_personas_de_15_a_24_anos), color = "white", size = 0.1) +
  scale_fill_viridis_c(
    name = "Tasa de alfabetización de las personas de 15 a 24 años", option="plasma"
  ) +
  labs(
    title = "Tasa de alfabetizacion de las personas de 15 a 24 años de los Municipios de Coahuila",
    caption = "Fuente: INEGI - Marco Geoestadístico"
  ) +
  theme_void() +
  theme(
    plot.title = element_text(size = 16, face = "bold"),
    plot.subtitle = element_text(size = 12),
    plot.caption = element_text(size = 10),
    legend.position = "right"
  )

```

A continuación, se presentan diferentes tipos de gráficos para visualizar la distribución de una sola variable cuantitativa, en este caso, la edad mediana de los municipios de Jalisco. Estos gráficos son útiles para comprender la distribución y características de la variable. En cada caso, es necesario que incluyas cómo se lleva a cabo cada gráfico y posteriormente, la interpretación de los resultados.


## Histograma

```{r}
#| code-fold: true
#| fig-width: 7
#| fig-align: center

ggplot(datos, aes(x = tasa_de_alfabetizacion_de_las_personas_de_15_a_24_anos)) +
  geom_histogram(color="black", fill = "#FFDAB9", boundary = min(datos$tasa_de_alfabetizacion_de_las_personas_de_15_a_24_anos), binwidth = 0.5) +
  labs(
    title = "Distribución de la Tasa de alfabetizaciòn entre personas de 15 a 24 años",
    x = "Tasa de alfabetización", y = "Frecuencia"
  ) +
  theme_bw()+
  theme(
    legend.title = element_text(size=13, face="bold"),
    legend.text = element_text(size=13),
    plot.title = element_text(size=15, face="bold"),
    plot.subtitle = element_text(size=13),
    axis.text.x=element_text(size=10),
    axis.text.y=element_text(size=10),
    axis.title.x = element_text(face="bold", size=13),
    axis.title.y = element_text(face="bold", size=13)
  )

```

## Gráfica de densidad

```{r}
#| code-fold: true
#| fig-width: 7
#| fig-align: center

ggplot(datos) +
  geom_density(aes(tasa_de_alfabetizacion_de_las_personas_de_15_a_24_anos), color="black", fill = "#FFCC9E" , alpha=0.6) +
  labs(
    title = "Distribución de la Tasa de alfabetización entre personas de 15 a 24 años",
    x = "Tasa de alfabetización", y = "Densidad"
  ) +
  theme_bw()+
  theme(
    legend.title = element_text(size=13, face="bold"),
    legend.text = element_text(size=13),
    plot.title = element_text(size=15, face="bold"),
    plot.subtitle = element_text(size=13),
    axis.text.x=element_text(size=12),
    axis.text.y=element_text(size=12),
    axis.title.x = element_text(face="bold", size=13),
    axis.title.y = element_text(face="bold", size=13)
  )


```

## Boxplot

```{r}
#| code-fold: true
#| fig-width: 7
#| fig-align: center

ggplot(data = datos, aes(x = "", y = tasa_de_alfabetizacion_de_las_personas_de_15_a_24_anos)) +
    geom_boxplot(
    fill = "#FFEBDA",           # Color de relleno
    color = "#FFDAB9",          # Color del borde más oscuro
    alpha = 0.8,                # Transparencia
    outlier.color = "#EBB16E",  # Color beige para outliers
    outlier.size = 2.5,         # Tamaño de outliers
    outlier.alpha = 0.7,        # Transparencia de outliers
    width = 0.5,                # Ancho del boxplot
    notch = TRUE,               # Muescas para intervalo de confianza
    notchwidth = 0.7            # Ancho de las muescas
  ) +
  geom_jitter(alpha = 0.3, color = "#f49335", size = 1.5, width = 0.1) +
  scale_y_continuous(breaks = pretty_breaks(n = 8), labels = function(x) paste(x, "años")) +
  labs(title = "Distribución de la Tasa de alfabetización entre personas de 15 a 24 años", 
  y = "Tasa de alfabetización",
  x = "")+
  theme_bw()+
  theme(
    legend.title = element_text(size=13, face="bold"),
    legend.text = element_text(size=13),
    plot.title = element_text(size=15, face="bold"),
    plot.subtitle = element_text(size=13),
    axis.text.x=element_text(size=12),
    axis.text.y=element_text(size=12),
    axis.title.x = element_text(face="bold", size=13),
    axis.title.y = element_text(face="bold", size=13),
    panel.grid.major.y = element_line(color = "#ECF0F1", linewidth = 0.5,
      linetype = "dashed"),
    panel.grid.minor.y = element_blank(),
    panel.grid.major.x = element_blank(),
    panel.background = element_rect(fill = "#FAFAFA", color = NA),
    plot.background = element_rect(fill = "white", color = NA)
  )
```

## Gráfico de violín

```{r}
#| code-fold: true
#| fig-width: 7
#| fig-align: center

ggplot(data = datos, aes(x = "", y = tasa_de_alfabetizacion_de_las_personas_de_15_a_24_anos)) +
    geom_violin(fill = "#F5D9C3", color = "#E4AC6A", alpha = 0.8,
    trim = FALSE,               # No recortar las colas
    scale = "width", width = 0.8, linewidth = 0.8) +
    geom_boxplot( width = 0.15, fill = "white", color = "#E4AC6A", alpha = 0.9,
    outlier.color = "#E74C3C", outlier.size = 1.5, outlier.alpha = 0.8, notch = FALSE) +
  stat_summary(fun = median, geom = "point", shape = 21, size = 3, fill = "white",
  color = "#E4AC6A", stroke = 1.5) +
  geom_jitter(alpha = 0.2, color = "#F5A040", size = 0.8, width = 0.05) +
  scale_y_continuous(breaks = pretty_breaks(n = 8), labels = function(x) paste(x, "años")) +
  labs(title = "Distribución de la Tasa de alfabetización entre personas de 15 a 24 años", 
  y = "Tasa de alfabetización",
  x = "")+
  theme_bw()+
  theme(
    legend.title = element_text(size=13, face="bold"),
    legend.text = element_text(size=13),
    plot.title = element_text(size=15, face="bold"),
    plot.subtitle = element_text(size=13),
    axis.text.x=element_text(size=12),
    axis.text.y=element_text(size=12),
    axis.title.x = element_text(face="bold", size=13),
    axis.title.y = element_text(face="bold", size=13),
    panel.grid.major.y = element_line(color = "#ECF0F1", linewidth = 0.5,
      linetype = "dashed"),
    panel.grid.minor.y = element_blank(),
    panel.grid.major.x = element_blank(),
    panel.background = element_rect(fill = "#FAFAFA", color = NA),
    plot.background = element_rect(fill = "white", color = NA)
  )
  
```

## Q-Q Plot (comparación de cuantiles)

```{r}
#| code-fold: true
#| fig-width: 7
#| fig-align: center


# Q-Q Plot básico para normalidad
ggplot(data = datos, aes(sample =tasa_de_alfabetizacion_de_las_personas_de_15_a_24_anos)) +
    stat_qq(color = "#fdab9b", size = 2, alpha = 0.7) +
    stat_qq_line(color = "#f77964", linewidth = 1, linetype = "dashed") +
    scale_x_continuous(name = "Cuantiles Teóricos (Distribución Normal)",
    breaks = pretty_breaks(n = 6)) +
    scale_y_continuous(name = "Cuantiles Muestrales (Tasa de Alfabetización)",
    breaks = pretty_breaks(n = 6),
    labels = function(x) paste(x, "años")) +
    labs(title = "Gráfico Q-Q para Normalidad",
    subtitle = "Tasa de Alfabetización - Población Coahuila") +
    theme_bw()+
    theme(
    legend.title = element_text(size=13, face="bold"),
    legend.text = element_text(size=13),
    plot.title = element_text(size=15, face="bold"),
    plot.subtitle = element_text(size=13),
    axis.text.x=element_text(size=12),
    axis.text.y=element_text(size=12),
    axis.title.x = element_text(face="bold", size=13),
    axis.title.y = element_text(face="bold", size=13),
    panel.grid.major.y = element_line(color = "#ECF0F1", linewidth = 0.5,
      linetype = "dashed"),
    panel.grid.minor.y = element_blank(),
    panel.grid.major.x = element_blank(),
    panel.background = element_rect(fill = "#FAFAFA", color = NA),
    plot.background = element_rect(fill = "white", color = NA)
  )
  


```

## Dot Plot (Gráfico de puntos)

```{r}
#| code-fold: true
#| fig-width: 7
#| fig-height: 16
#| fig-align: center

ggplot(data = datos, aes(x = tasa_de_alfabetizacion_de_las_personas_de_15_a_24_anos, y = reorder(NOMGEO, tasa_de_alfabetizacion_de_las_personas_de_15_a_24_anos))) +
  geom_point(color = "#fa937e", size = 3, alpha = 0.8) +
  geom_segment(aes(x = 0, xend = tasa_de_alfabetizacion_de_las_personas_de_15_a_24_anos, y = NOMGEO, yend = NOMGEO),
    color = "#BDC3C7", size = 0.5, alpha = 0.7) +
  scale_x_continuous(
    name = "Tasa de alfabetización",
    breaks = pretty_breaks(n = 6),
    expand = expansion(mult = c(0, 0.05))) +
  scale_y_discrete(
    name = "Municipios",
    expand = expansion(mult = c(0.05, .05))
  ) +
  labs(
    title = "Dot Plot - Tasa de alfabetización entre personas de 15 a 24 años por Municipio",
    subtitle = "Estado de Coahuila") +
  theme_bw()+
    theme(
    legend.title = element_text(size=13, face="bold"),
    legend.text = element_text(size=13),
    plot.title = element_text(size=15, face="bold"),
    plot.subtitle = element_text(size=13),
    axis.text.x=element_text(size=12),
    axis.text.y=element_text(size=9),
    axis.title.x = element_text(face="bold", size=13),
    axis.title.y = element_text(face="bold", size=13),
    panel.grid.major.y = element_line(color = "#ECF0F1", linewidth = 0.5,
      linetype = "dashed"),
    panel.grid.minor.y = element_blank(),
    panel.grid.major.x = element_blank(),
    panel.background = element_rect(fill = "#FAFAFA", color = NA),
    plot.background = element_rect(fill = "white", color = NA)
  )

```

## **Población derechohabiente a servicios de salud**

```{r}
#| code-fold: true
#| fig-width: 8
#| fig-align: center

ggplot(datos) +
  geom_sf(aes(fill = poblacion_derechohabiente_a_servicios_de_salud), color = "white", size = 0.1) +
  scale_fill_viridis_c(
    name = "Población derechohabiente a servicios de salud", option="plasma"
  ) +
  labs(
    title = "Población derechohabiente a servicios de salud de los Municipios de Coahuila",
    caption = "Fuente: INEGI - Marco Geoestadístico"
  ) +
  theme_void() +
  theme(
    plot.title = element_text(size = 16, face = "bold"),
    plot.subtitle = element_text(size = 12),
    plot.caption = element_text(size = 10),
    legend.position = "right"
  )

```

##Histograma
```{r}
#| code-fold: true
#| fig-width: 7
#| fig-align: center

ggplot(datos, aes(x = poblacion_derechohabiente_a_servicios_de_salud)) +
  geom_histogram(color="black", fill = "#FFDAB9", boundary = min(datos$poblacion_derechohabiente_a_servicios_de_salud), binwidth = 100) +
  labs(
    title = "Distribución de la Población derechohabiente a servicios de salud",
    x = "Población derechohabiente", y = "Frecuencia"
  ) +
  theme_bw()+
  theme(
    legend.title = element_text(size=13, face="bold"),
    legend.text = element_text(size=13),
    plot.title = element_text(size=15, face="bold"),
    plot.subtitle = element_text(size=13),
    axis.text.x=element_text(size=10),
    axis.text.y=element_text(size=10),
    axis.title.x = element_text(face="bold", size=13),
    axis.title.y = element_text(face="bold", size=13)
  )

```
##Gráfica de densidad

```{r}
#| code-fold: true
#| fig-width: 7
#| fig-align: center

ggplot(datos) +
  geom_density(aes(poblacion_derechohabiente_a_servicios_de_salud), color="black", fill = "#FFCC9E" , alpha=0.6) +
  labs(
    title = "Distribución de la Población derechohabiente a servicios de salud",
    x = "Población derechohabiente", y = "Densidad"
  ) +
  theme_bw()+
  theme(
    legend.title = element_text(size=13, face="bold"),
    legend.text = element_text(size=13),
    plot.title = element_text(size=15, face="bold"),
    plot.subtitle = element_text(size=13),
    axis.text.x=element_text(size=12),
    axis.text.y=element_text(size=12),
    axis.title.x = element_text(face="bold", size=13),
    axis.title.y = element_text(face="bold", size=13)
  )

```

##Boxplot

```{r}
#| code-fold: true
#| fig-width: 7
#| fig-align: center

ggplot(data = datos, aes(x = "", y = poblacion_derechohabiente_a_servicios_de_salud)) +
    geom_boxplot(
    fill = "#FFEBDA",
    color = "#FFDAB9",
    alpha = 1,
    outlier.color = "#EBB16E",
    outlier.size = 2.5,
    outlier.alpha = 0.7,
    width = 0.5,
    notch = TRUE,
    notchwidth = 0.7
  ) +
  geom_jitter(alpha = 0.3, color = "#f49335", size = 1.5, width = 0.1) +
  scale_y_continuous(breaks = pretty_breaks(n = 8), labels = function(x) paste(x, "personas")) +
  labs(title = "Distribución de la Población derechohabiente a servicios de salud", 
  y = "Población derechohabiente",
  x = "")+
  theme_bw()+
  theme(
    legend.title = element_text(size=13, face="bold"),
    legend.text = element_text(size=13),
    plot.title = element_text(size=15, face="bold"),
    plot.subtitle = element_text(size=13),
    axis.text.x=element_text(size=12),
    axis.text.y=element_text(size=12),
    axis.title.x = element_text(face="bold", size=13),
    axis.title.y = element_text(face="bold", size=13),
    panel.grid.major.y = element_line(color = "#ECF0F1", linewidth = 0.5,
      linetype = "dashed"),
    panel.grid.minor.y = element_blank(),
    panel.grid.major.x = element_blank(),
    panel.background = element_rect(fill = "#FAFAFA", color = NA),
    plot.background = element_rect(fill = "white", color = NA)
  )

```

##Gráfico de violín


```{r}
#| code-fold: true
#| fig-width: 7
#| fig-align: center

ggplot(data = datos, aes(x = "", y = poblacion_derechohabiente_a_servicios_de_salud)) +
    geom_violin(fill = "#F5D9C3", color = "#E4AC6A", alpha = 0.8,
    trim = FALSE,
    scale = "width", width = 0.8, linewidth = 0.8) +
    geom_boxplot( width = 0.15, fill = "white", color = "#E4AC6A", alpha = 0.9,
    outlier.color = "#E74C3C", outlier.size = 1.5, outlier.alpha = 0.8, notch = FALSE) +
  stat_summary(fun = median, geom = "point", shape = 21, size = 3, fill = "white",
  color = "#E4AC6A", stroke = 1.5) +
  geom_jitter(alpha = 0.2, color = "#F5A040", size = 0.8, width = 0.05) +
  scale_y_continuous(breaks = pretty_breaks(n = 8), labels = function(x) paste(x, "personas")) +
  labs(title = "Distribución de la Población derechohabiente a servicios de salud", 
  y = "Población derechohabiente",
  x = "")+
  theme_bw()+
  theme(
    legend.title = element_text(size=13, face="bold"),
    legend.text = element_text(size=13),
    plot.title = element_text(size=15, face="bold"),
    plot.subtitle = element_text(size=13),
    axis.text.x=element_text(size=12),
    axis.text.y=element_text(size=12),
    axis.title.x = element_text(face="bold", size=13),
    axis.title.y = element_text(face="bold", size=13),
    panel.grid.major.y = element_line(color = "#ECF0F1", linewidth = 0.5,
      linetype = "dashed"),
    panel.grid.minor.y = element_blank(),
    panel.grid.major.x = element_blank(),
    panel.background = element_rect(fill = "#FAFAFA", color = NA),
    plot.background = element_rect(fill = "white", color = NA)
  )

```
##Q-Q Plot (comparación de cuantiles)

```{r}
#| code-fold: true
#| fig-width: 7
#| fig-align: center

ggplot(data = datos, aes(sample = poblacion_derechohabiente_a_servicios_de_salud)) +
    stat_qq(color = "#fdab9b", size = 2, alpha = 0.7) +
    stat_qq_line(color = "#f77964", linewidth = 1, linetype = "dashed") +
    scale_x_continuous(name = "Cuantiles Teóricos (Distribución Normal)",
    breaks = pretty_breaks(n = 6)) +
    scale_y_continuous(name = "Cuantiles Muestrales (Población derechohabiente)",
    breaks = pretty_breaks(n = 6),
    labels = function(x) paste(x, "personas")) +
    labs(title = "Gráfico Q-Q para Normalidad",
    subtitle = "Población derechohabiente a servicios de salud - Coahuila") +
    theme_bw()+
    theme(
    legend.title = element_text(size=13, face="bold"),
    legend.text = element_text(size=13),
    plot.title = element_text(size=15, face="bold"),
    plot.subtitle = element_text(size=13),
    axis.text.x=element_text(size=12),
    axis.text.y=element_text(size=12),
    axis.title.x = element_text(face="bold", size=13),
    axis.title.y = element_text(face="bold", size=13),
    panel.grid.major.y = element_line(color = "#ECF0F1", linewidth = 0.5,
      linetype = "dashed"),
    panel.grid.minor.y = element_blank(),
    panel.grid.major.x = element_blank(),
    panel.background = element_rect(fill = "#FAFAFA", color = NA),
    plot.background = element_rect(fill = "white", color = NA)
  )

```

##Dot Plot (Gráfico de puntos)

```{r}
#| code-fold: true
#| fig-width: 7
#| fig-height: 16
#| fig-align: center

ggplot(data = datos, aes(x = poblacion_derechohabiente_a_servicios_de_salud, y = reorder(NOMGEO, poblacion_derechohabiente_a_servicios_de_salud))) +
  geom_point(color = "#fa937e", size = 3, alpha = 0.8) +
  geom_segment(aes(x = 0, xend = poblacion_derechohabiente_a_servicios_de_salud, y = NOMGEO, yend = NOMGEO),
    color = "#BDC3C7", size = 0.5, alpha = 0.7) +
  scale_x_continuous(
    name = "Población derechohabiente",
    breaks = pretty_breaks(n = 6),
    expand = expansion(mult = c(0, 0.05))) +
  scale_y_discrete(
    name = "Municipios",
    expand = expansion(mult = c(0.05, .05))
  ) +
  labs(
    title = "Dot Plot - Población derechohabiente a servicios de salud por Municipio",
    subtitle = "Estado de Coahuila") +
  theme_bw()+
    theme(
    legend.title = element_text(size=13, face="bold"),
    legend.text = element_text(size=13),
    plot.title = element_text(size=15, face="bold"),
    plot.subtitle = element_text(size=13),
    axis.text.x=element_text(size=12),
    axis.text.y=element_text(size=9),
    axis.title.x = element_text(face="bold", size=13),
    axis.title.y = element_text(face="bold", size=13),
    panel.grid.major.y = element_line(color = "#ECF0F1", linewidth = 0.5,
      linetype = "dashed"),
    panel.grid.minor.y = element_blank(),
    panel.grid.major.x = element_blank(),
    panel.background = element_rect(fill = "#FAFAFA", color = NA),
    plot.background = element_rect(fill = "white", color = NA)
  )

```
## **Grado promedio de escolaridad de la población de 15 y más años**

```{r}
#| code-fold: true
#| fig-width: 8
#| fig-align: center

ggplot(datos) +
  geom_sf(aes(fill = grado_promedio_de_escolaridad_de_la_poblacion_de_15_y_mas_anos), color = "white", size = 0.1) +
  scale_fill_viridis_c(
    name = "Grado promedio de escolaridad de la población de 15 y más años", option="plasma"
  ) +
  labs(
    title = "Grado promedio de escolaridad de la población de 15 y más años de los Municipios de Coahuila",
    caption = "Fuente: INEGI - Marco Geoestadístico"
  ) +
  theme_void() +
  theme(
    plot.title = element_text(size = 16, face = "bold"),
    plot.subtitle = element_text(size = 12),
    plot.caption = element_text(size = 10),
    legend.position = "right"
  )
```
##Histograma

```{r}

#| code-fold: true
#| fig-width: 7
#| fig-align: center

ggplot(datos, aes(x = grado_promedio_de_escolaridad_de_la_poblacion_de_15_y_mas_anos)) +
  geom_histogram(color="black", fill = "#FFDAB9", boundary = min(datos$grado_promedio_de_escolaridad_de_la_poblacion_de_15_y_mas_anos), binwidth = 0.5) +
  labs(
    title = "Distribución del Grado promedio de escolaridad de la población de 15 y más años",
    x = "Grado promedio de escolaridad", y = "Frecuencia"
  ) +
  theme_bw()+
  theme(
    legend.title = element_text(size=13, face="bold"),
    legend.text = element_text(size=13),
    plot.title = element_text(size=15, face="bold"),
    plot.subtitle = element_text(size=13),
    axis.text.x=element_text(size=10),
    axis.text.y=element_text(size=10),
    axis.title.x = element_text(face="bold", size=13),
    axis.title.y = element_text(face="bold", size=13)
  )
```
##Gráfica de densidad

```{r}

#| code-fold: true
#| fig-width: 7
#| fig-align: center

ggplot(datos) +
  geom_density(aes(grado_promedio_de_escolaridad_de_la_poblacion_de_15_y_mas_anos), color="black", fill = "#FFCC9E" , alpha=0.6) +
  labs(
    title = "Distribución del Grado promedio de escolaridad de la población de 15 y más años",
    x = "Grado promedio de escolaridad", y = "Densidad"
  ) +
  theme_bw()+
  theme(
    legend.title = element_text(size=13, face="bold"),
    legend.text = element_text(size=13),
    plot.title = element_text(size=15, face="bold"),
    plot.subtitle = element_text(size=13),
    axis.text.x=element_text(size=12),
    axis.text.y=element_text(size=12),
    axis.title.x = element_text(face="bold", size=13),
    axis.title.y = element_text(face="bold", size=13)
  )
```
##Boxplot

```{r}

#| code-fold: true
#| fig-width: 7
#| fig-align: center

ggplot(data = datos, aes(x = "", y = grado_promedio_de_escolaridad_de_la_poblacion_de_15_y_mas_anos)) +
    geom_boxplot(
    fill = "#FFEBDA",
    color = "#FFDAB9",
    alpha = 0.8,
    outlier.color = "#EBB16E",
    outlier.size = 2.5,
    outlier.alpha = 0.7,
    width = 0.5,
    notch = TRUE,
    notchwidth = 0.7
  ) +
  geom_jitter(alpha = 0.3, color = "#f49335", size = 1.5, width = 0.1) +
  scale_y_continuous(breaks = pretty_breaks(n = 8), labels = function(x) paste(x, "años")) +
  labs(title = "Distribución del Grado promedio de escolaridad de la población de 15 y más años", 
  y = "Grado promedio de escolaridad",
  x = "")+
  theme_bw()+
  theme(
    legend.title = element_text(size=13, face="bold"),
    legend.text = element_text(size=13),
    plot.title = element_text(size=15, face="bold"),
    plot.subtitle = element_text(size=13),
    axis.text.x=element_text(size=12),
    axis.text.y=element_text(size=12),
    axis.title.x = element_text(face="bold", size=13),
    axis.title.y = element_text(face="bold", size=13),
    panel.grid.major.y = element_line(color = "#ECF0F1", linewidth = 0.5,
      linetype = "dashed"),
    panel.grid.minor.y = element_blank(),
    panel.grid.major.x = element_blank(),
    panel.background = element_rect(fill = "#FAFAFA", color = NA),
    plot.background = element_rect(fill = "white", color = NA)
  )
```
##Gráfico de violín

```{r}

#| code-fold: true
#| fig-width: 7
#| fig-align: center

ggplot(data = datos, aes(x = "", y = grado_promedio_de_escolaridad_de_la_poblacion_de_15_y_mas_anos)) +
    geom_violin(fill = "#F5D9C3", color = "#E4AC6A", alpha = 0.8,
    trim = FALSE,
    scale = "width", width = 0.8, linewidth = 0.8) +
    geom_boxplot( width = 0.15, fill = "white", color = "#E4AC6A", alpha = 0.9,
    outlier.color = "#E74C3C", outlier.size = 1.5, outlier.alpha = 0.8, notch = FALSE) +
  stat_summary(fun = median, geom = "point", shape = 21, size = 3, fill = "white",
  color = "#E4AC6A", stroke = 1.5) +
  geom_jitter(alpha = 0.2, color = "#F5A040", size = 0.8, width = 0.05) +
  scale_y_continuous(breaks = pretty_breaks(n = 8), labels = function(x) paste(x, "años")) +
  labs(title = "Distribución del Grado promedio de escolaridad de la población de 15 y más años", 
  y = "Grado promedio de escolaridad",
  x = "")+
  theme_bw()+
  theme(
    legend.title = element_text(size=13, face="bold"),
    legend.text = element_text(size=13),
    plot.title = element_text(size=15, face="bold"),
    plot.subtitle = element_text(size=13),
    axis.text.x=element_text(size=12),
    axis.text.y=element_text(size=12),
    axis.title.x = element_text(face="bold", size=13),
    axis.title.y = element_text(face="bold", size=13),
    panel.grid.major.y = element_line(color = "#ECF0F1", linewidth = 0.5,
      linetype = "dashed"),
    panel.grid.minor.y = element_blank(),
    panel.grid.major.x = element_blank(),
    panel.background = element_rect(fill = "#FAFAFA", color = NA),
    plot.background = element_rect(fill = "white", color = NA)
  )
```
##Q-Q Plot

```{r}

#| code-fold: true
#| fig-width: 7
#| fig-align: center

ggplot(data = datos, aes(sample = grado_promedio_de_escolaridad_de_la_poblacion_de_15_y_mas_anos)) +
    stat_qq(color = "#fdab9b", size = 2, alpha = 0.7) +
    stat_qq_line(color = "#f77964", linewidth = 1, linetype = "dashed") +
    scale_x_continuous(name = "Cuantiles Teóricos (Distribución Normal)",
    breaks = pretty_breaks(n = 6)) +
    scale_y_continuous(name = "Cuantiles Muestrales (Grado promedio de escolaridad)",
    breaks = pretty_breaks(n = 6),
    labels = function(x) paste(x, "años")) +
    labs(title = "Gráfico Q-Q para Normalidad",
    subtitle = "Grado promedio de escolaridad - Población Coahuila") +
    theme_bw()+
    theme(
    legend.title = element_text(size=13, face="bold"),
    legend.text = element_text(size=13),
    plot.title = element_text(size=15, face="bold"),
    plot.subtitle = element_text(size=13),
    axis.text.x=element_text(size=12),
    axis.text.y=element_text(size=12),
    axis.title.x = element_text(face="bold", size=13),
    axis.title.y = element_text(face="bold", size=13),
    panel.grid.major.y = element_line(color = "#ECF0F1", linewidth = 0.5,
      linetype = "dashed"),
    panel.grid.minor.y = element_blank(),
    panel.grid.major.x = element_blank(),
    panel.background = element_rect(fill = "#FAFAFA", color = NA),
    plot.background = element_rect(fill = "white", color = NA)
  )
```
##Dot Plot
```{r}

#| code-fold: true
#| fig-width: 7
#| fig-height: 16
#| fig-align: center

ggplot(data = datos, aes(x = grado_promedio_de_escolaridad_de_la_poblacion_de_15_y_mas_anos, y = reorder(NOMGEO, grado_promedio_de_escolaridad_de_la_poblacion_de_15_y_mas_anos))) +
  geom_point(color = "#fa937e", size = 3, alpha = 0.8) +
  geom_segment(aes(x = 0, xend = grado_promedio_de_escolaridad_de_la_poblacion_de_15_y_mas_anos, y = NOMGEO, yend = NOMGEO),
    color = "#BDC3C7", size = 0.5, alpha = 0.7) +
  scale_x_continuous(
    name = "Grado promedio de escolaridad",
    breaks = pretty_breaks(n = 6),
    expand = expansion(mult = c(0, 0.05))) +
  scale_y_discrete(
    name = "Municipios",
    expand = expansion(mult = c(0.05, .05))
  ) +
  labs(
    title = "Dot Plot - Grado promedio de escolaridad de la población de 15 y más años por Municipio",
    subtitle = "Estado de Coahuila") +
  theme_bw()+
    theme(
    legend.title = element_text(size=13, face="bold"),
    legend.text = element_text(size=13),
    plot.title = element_text(size=15, face="bold"),
    plot.subtitle = element_text(size=13),
    axis.text.x=element_text(size=12),
    axis.text.y=element_text(size=9),
    axis.title.x = element_text(face="bold", size=13),
    axis.title.y = element_text(face="bold", size=13),
    panel.grid.major.y = element_line(color = "#ECF0F1", linewidth = 0.5,
      linetype = "dashed"),
    panel.grid.minor.y = element_blank(),
    panel.grid.major.x = element_blank(),
    panel.background = element_rect(fill = "#FAFAFA", color = NA),
    plot.background = element_rect(fill = "white", color = NA)
  )
```

## **Índice de envejecimiento**

```{r} 
#| code-fold: true 
#| fig-width: 8 
#| fig-align: center 

ggplot(datos) + 
  geom_sf(aes(fill = indice_de_envejecimiento), color = "white", size = 0.1) + 
  scale_fill_viridis_c( 
    name = "Índice de envejecimiento", 
    option="plasma" 
  ) + 
  labs( 
    title = "Índice de envejecimiento de los Municipios de Coahuila", 
    caption = "Fuente: INEGI - Marco Geoestadístico" 
  ) + 
  theme_void() + 
  theme( 
    plot.title = element_text(size = 16, face = "bold"), 
    plot.subtitle = element_text(size = 12), 
    plot.caption = element_text(size = 10), 
    legend.position = "right" 
  )
```

## Histograma

```{r} 
#| code-fold: true 
#| fig-width: 7 
#| fig-align: center 

ggplot(datos, aes(x = indice_de_envejecimiento)) + 
  geom_histogram( 
    color="black", 
    fill = "#FFDAB9", 
    boundary = min(datos$indice_de_envejecimiento), 
    binwidth = 5
  ) + 
  labs( 
    title = "Distribución del Índice de envejecimiento", 
    x = "Índice de envejecimiento", 
    y = "Frecuencia" 
  ) + 
  theme_bw() +
  theme( 
    legend.title = element_text(size=13, face="bold"), 
    legend.text = element_text(size=13), 
    plot.title = element_text(size=15, face="bold"), 
    plot.subtitle = element_text(size=13), 
    axis.text.x=element_text(size=10), 
    axis.text.y=element_text(size=10), 
    axis.title.x = element_text(face="bold", size=13), 
    axis.title.y = element_text(face="bold", size=13) 
  )
```

## Gráfica de densidad
```{r} 
#| code-fold: true 
#| fig-width: 7 
#| fig-align: center 

ggplot(datos) + 
  geom_density( 
    aes(indice_de_envejecimiento), 
    color="black", 
    fill = "#FFCC9E", 
    alpha=0.6
  ) + 
  labs( 
    title = "Distribución del Índice de envejecimiento", 
    x = "Índice de envejecimiento", 
    y = "Densidad" 
  ) + 
  theme_bw() +
  theme( 
    legend.title = element_text(size=13, face="bold"), 
    legend.text = element_text(size=13), 
    plot.title = element_text(size=15, face="bold"), 
    plot.subtitle = element_text(size=13), 
    axis.text.x=element_text(size=12), 
    axis.text.y=element_text(size=12), 
    axis.title.x = element_text(face="bold", size=13), 
    axis.title.y = element_text(face="bold", size=13) 
  )
```

## Boxplot
```{r} 
#| code-fold: true 
#| fig-width: 7 
#| fig-align: center 

ggplot(data = datos, aes(x = "", y = indice_de_envejecimiento)) + 
  geom_boxplot( 
    fill = "#FFEBDA", 
    color = "#FFDAB9", 
    alpha = 0.8, 
    outlier.color = "#EBB16E", 
    outlier.size = 2.5, 
    outlier.alpha = 0.7, 
    width = 0.5, 
    notch = TRUE, 
    notchwidth = 0.7 
  ) + 
  geom_jitter( 
    alpha = 0.3, 
    color = "#f49335", 
    size = 1.5, 
    width = 0.1 
  ) + 
  scale_y_continuous( 
    breaks = pretty_breaks(n = 8), 
    labels = function(x) paste(x, "años") 
  ) + 
  labs( 
    title = "Distribución del Índice de envejecimiento", 
    y = "Índice de envejecimiento", 
    x = "" 
  ) + 
  theme_bw() + 
  theme( 
    legend.title = element_text(size=13, face="bold"), 
    legend.text = element_text(size=13), 
    plot.title = element_text(size=15, face="bold"), 
    plot.subtitle = element_text(size=13), 
    axis.text.x=element_text(size=12), 
    axis.text.y=element_text(size=12), 
    axis.title.x = element_text(face="bold", size=13), 
    axis.title.y = element_text(face="bold", size=13), 
    panel.grid.major.y = element_line(color = "#ECF0F1", linewidth = 0.5, linetype = "dashed"), 
    panel.grid.minor.y = element_blank(), 
    panel.grid.major.x = element_blank(), 
    panel.background = element_rect(fill = "#FAFAFA", color = NA), 
    plot.background = element_rect(fill = "white", color = NA) 
  )
```

## Gráfico de violín

```{r} 
#| code-fold: true 
#| fig-width: 7 
#| fig-align: center 

ggplot(data = datos, aes(x = "", y = indice_de_envejecimiento)) + 
  geom_violin( 
    fill = "#F5D9C3", 
    color = "#E4AC6A", 
    alpha = 0.8, 
    trim = FALSE, 
    scale = "width", 
    width = 0.8, 
    linewidth = 0.8 
  ) + 
  geom_boxplot( 
    width = 0.15, 
    fill = "white", 
    color = "#E4AC6A", 
    alpha = 0.9, 
    outlier.color = "#E74C3C", 
    outlier.size = 1.5, 
    outlier.alpha = 0.8, 
    notch = FALSE 
  ) + 
  stat_summary( 
    fun = median, 
    geom = "point", 
    shape = 21, 
    size = 3, 
    fill = "white", 
    color = "#E4AC6A", 
    stroke = 1.5 
  ) + 
  geom_jitter( 
    alpha = 0.2, 
    color = "#F5A040", 
    size = 0.8, 
    width = 0.05 
  ) + 
  scale_y_continuous( 
    breaks = pretty_breaks(n = 8), 
    labels = function(x) paste(x, "años") 
  ) + 
  labs( 
    title = "Distribución del Índice de envejecimiento", 
    y = "Índice de envejecimiento", 
    x = "" 
  ) + 
  theme_bw() + 
  theme( 
    legend.title = element_text(size=13, face="bold"), 
    legend.text = element_text(size=13), 
    plot.title = element_text(size=15, face="bold"), 
    plot.subtitle = element_text(size=13), 
    axis.text.x=element_text(size=12), 
    axis.text.y=element_text(size=12), 
    axis.title.x = element_text(face="bold", size=13), 
    axis.title.y = element_text(face="bold", size=13), 
    panel.grid.major.y = element_line(color = "#ECF0F1", linewidth = 0.5, linetype = "dashed"), 
    panel.grid.minor.y = element_blank(), 
    panel.grid.major.x = element_blank(), 
    panel.background = element_rect(fill = "#FAFAFA", color = NA), 
    plot.background = element_rect(fill = "white", color = NA) 
  )
```

## Q-Q Plot (comparación de cuantiles)
```{r} 
#| code-fold: true 
#| fig-width: 7 
#| fig-align: center 

ggplot(data = datos, aes(sample = indice_de_envejecimiento)) + 
  stat_qq(color = "#fdab9b", size = 2, alpha = 0.7) + 
  stat_qq_line(color = "#f77964", linewidth = 1, linetype = "dashed") + 
  scale_x_continuous( 
    name = "Cuantiles Teóricos (Distribución Normal)", 
    breaks = pretty_breaks(n = 6) 
  ) + 
  scale_y_continuous( 
    name = "Cuantiles Muestrales (Índice de envejecimiento)", 
    breaks = pretty_breaks(n = 6), 
    labels = function(x) paste(x, "años") 
  ) + 
  labs( 
    title = "Gráfico Q-Q para Normalidad", 
    subtitle = "Índice de envejecimiento - Población Coahuila" 
  ) + 
  theme_bw() + 
  theme( 
    legend.title = element_text(size=13, face="bold"), 
    legend.text = element_text(size=13), 
    plot.title = element_text(size=15, face="bold"), 
    plot.subtitle = element_text(size=13), 
    axis.text.x=element_text(size=12), 
    axis.text.y=element_text(size=12), 
    axis.title.x = element_text(face="bold", size=13), 
    axis.title.y = element_text(face="bold", size=13), 
    panel.grid.major.y = element_line(color = "#ECF0F1", linewidth = 0.5, linetype = "dashed"), 
    panel.grid.minor.y = element_blank(), 
    panel.grid.major.x = element_blank(), 
    panel.background = element_rect(fill = "#FAFAFA", color = NA), 
    plot.background = element_rect(fill = "white", color = NA) 
  )
```

##Dot Plot
```{r} 
#| code-fold: true 
#| fig-width: 7 
#| fig-height: 16 
#| fig-align: center 

ggplot(data = datos, aes(x = indice_de_envejecimiento, y = reorder(NOMGEO, indice_de_envejecimiento))) + 
  geom_point(color = "#fa937e", size = 3, alpha = 0.8) + 
  geom_segment(
    aes(x = 0, xend = indice_de_envejecimiento, y = NOMGEO, yend = NOMGEO), 
    color = "#BDC3C7", size = 0.5, alpha = 0.7
  ) + 
  scale_x_continuous( 
    name = "Índice de envejecimiento", 
    breaks = pretty_breaks(n = 6), 
    expand = expansion(mult = c(0, 0.05)) 
  ) + 
  scale_y_discrete( 
    name = "Municipios", 
    expand = expansion(mult = c(0.05, .05)) 
  ) + 
  labs( 
    title = "Dot Plot - Índice de envejecimiento por Municipio", 
    subtitle = "Estado de Coahuila" 
  ) + 
  theme_bw() + 
  theme( 
    legend.title = element_text(size=13, face="bold"), 
    legend.text = element_text(size=13), 
    plot.title = element_text(size=15, face="bold"), 
    plot.subtitle = element_text(size=13), 
    axis.text.x = element_text(size=12), 
    axis.text.y = element_text(size=9), 
    axis.title.x = element_text(face="bold", size=13), 
    axis.title.y = element_text(face="bold", size=13), 
    panel.grid.major.y = element_line(color = "#ECF0F1", linewidth = 0.5, linetype = "dashed"), 
    panel.grid.minor.y = element_blank(), 
    panel.grid.major.x = element_blank(), 
    panel.background = element_rect(fill = "#FAFAFA", color = NA), 
    plot.background = element_rect(fill = "white", color = NA) 
  )
```
## **Edad mediana mujeres**

```{r}
#| code-fold: true
#| fig-width: 8
#| fig-align: center

ggplot(datos) +
  geom_sf(aes(fill = edad_mediana_mujeres), color = "white", size = 0.1) +
  scale_fill_viridis_c(
    name = "Edad mediana mujeres", option="plasma"
  ) +
  labs(
    title = "Edad mediana mujeres de los Municipios de Coahuila",
    caption = "Fuente: INEGI - Marco Geoestadístico"
  ) +
  theme_void() +
  theme(
    plot.title = element_text(size = 16, face = "bold"),
    plot.subtitle = element_text(size = 12),
    plot.caption = element_text(size = 10),
    legend.position = "right"
  )
```

## Histograma
```{r}
#| code-fold: true
#| fig-width: 7
#| fig-align: center

ggplot(datos, aes(x = edad_mediana_mujeres)) +
  geom_histogram(color="black", fill = "#FFDAB9", boundary = min(datos$edad_mediana_mujeres), binwidth = 2) +
  labs(
    title = "Distribución de la Edad mediana mujeres",
    x = "Edad mediana mujeres", y = "Frecuencia"
  ) +
  theme_bw()+
  theme(
    legend.title = element_text(size=13, face="bold"),
    legend.text = element_text(size=13),
    plot.title = element_text(size=15, face="bold"),
    plot.subtitle = element_text(size=13),
    axis.text.x=element_text(size=10),
    axis.text.y=element_text(size=10),
    axis.title.x = element_text(face="bold", size=13),
    axis.title.y = element_text(face="bold", size=13)
  )
```

## Gráfica de densidad
```{r}
#| code-fold: true
#| fig-width: 7
#| fig-align: center

ggplot(datos) +
  geom_density(aes(edad_mediana_mujeres), color="black", fill = "#FFCC9E" , alpha=0.6) +
  labs(
    title = "Distribución de la Edad mediana mujeres",
    x = "Edad mediana mujeres", y = "Densidad"
  ) +
  theme_bw()+
  theme(
    legend.title = element_text(size=13, face="bold"),
    legend.text = element_text(size=13),
    plot.title = element_text(size=15, face="bold"),
    plot.subtitle = element_text(size=13),
    axis.text.x=element_text(size=12),
    axis.text.y=element_text(size=12),
    axis.title.x = element_text(face="bold", size=13),
    axis.title.y = element_text(face="bold", size=13)
  )
```

## Boxplot
```{r}
#| code-fold: true
#| fig-width: 7
#| fig-align: center

ggplot(data = datos, aes(x = "", y = edad_mediana_mujeres)) +
    geom_boxplot(
    fill = "#FFEBDA",
    color = "#FFDAB9",
    alpha = 0.8,
    outlier.color = "#EBB16E",
    outlier.size = 2.5,
    outlier.alpha = 0.7,
    width = 0.5,
    notch = TRUE,
    notchwidth = 0.7
  ) +
  geom_jitter(alpha = 0.3, color = "#f49335", size = 1.5, width = 0.1) +
  scale_y_continuous(breaks = pretty_breaks(n = 8), labels = function(x) paste(x, "años")) +
  labs(title = "Distribución de la Edad mediana mujeres", 
  y = "Edad mediana mujeres",
  x = "")+
  theme_bw()+
  theme(
    legend.title = element_text(size=13, face="bold"),
    legend.text = element_text(size=13),
    plot.title = element_text(size=15, face="bold"),
    plot.subtitle = element_text(size=13),
    axis.text.x=element_text(size=12),
    axis.text.y=element_text(size=12),
    axis.title.x = element_text(face="bold", size=13),
    axis.title.y = element_text(face="bold", size=13),
    panel.grid.major.y = element_line(color = "#ECF0F1", linewidth = 0.5,
      linetype = "dashed"),
    panel.grid.minor.y = element_blank(),
    panel.grid.major.x = element_blank(),
    panel.background = element_rect(fill = "#FAFAFA", color = NA),
    plot.background = element_rect(fill = "white", color = NA)
  )
```

## Gráfico de violín
```{r}
#| code-fold: true
#| fig-width: 7
#| fig-align: center

ggplot(data = datos, aes(x = "", y = edad_mediana_mujeres)) +
    geom_violin(fill = "#F5D9C3", color = "#E4AC6A", alpha = 0.8,
    trim = FALSE,
    scale = "width", width = 0.8, linewidth = 0.8) +
    geom_boxplot( width = 0.15, fill = "white", color = "#E4AC6A", alpha = 0.9,
    outlier.color = "#E74C3C", outlier.size = 1.5, outlier.alpha = 0.8, notch = FALSE) +
  stat_summary(fun = median, geom = "point", shape = 21, size = 3, fill = "white",
  color = "#E4AC6A", stroke = 1.5) +
  geom_jitter(alpha = 0.2, color = "#F5A040", size = 0.8, width = 0.05) +
  scale_y_continuous(breaks = pretty_breaks(n = 8), labels = function(x) paste(x, "años")) +
  labs(title = "Distribución de la Edad mediana mujeres", 
  y = "Edad mediana mujeres",
  x = "")+
  theme_bw()+
  theme(
    legend.title = element_text(size=13, face="bold"),
    legend.text = element_text(size=13),
    plot.title = element_text(size=15, face="bold"),
    plot.subtitle = element_text(size=13),
    axis.text.x=element_text(size=12),
    axis.text.y=element_text(size=12),
    axis.title.x = element_text(face="bold", size=13),
    axis.title.y = element_text(face="bold", size=13),
    panel.grid.major.y = element_line(color = "#ECF0F1", linewidth = 0.5,
      linetype = "dashed"),
    panel.grid.minor.y = element_blank(),
    panel.grid.major.x = element_blank(),
    panel.background = element_rect(fill = "#FAFAFA", color = NA),
    plot.background = element_rect(fill = "white", color = NA)
  )
```

## Q-Q Plot (comparación de cuantiles)
```{r}
#| code-fold: true
#| fig-width: 7
#| fig-align: center

# Q-Q Plot básico para normalidad
ggplot(data = datos, aes(sample = edad_mediana_mujeres)) +
    stat_qq(color = "#fdab9b", size = 2, alpha = 0.7) +
    stat_qq_line(color = "#f77964", linewidth = 1, linetype = "dashed") +
    scale_x_continuous(name = "Cuantiles Teóricos (Distribución Normal)",
    breaks = pretty_breaks(n = 6)) +
    scale_y_continuous(name = "Cuantiles Muestrales (Edad mediana mujeres)",
    breaks = pretty_breaks(n = 6),
    labels = function(x) paste(x, "años")) +
    labs(title = "Gráfico Q-Q para Normalidad",
    subtitle = "Edad mediana mujeres - Población Coahuila") +
    theme_bw()+
    theme(
    legend.title = element_text(size=13, face="bold"),
    legend.text = element_text(size=13),
    plot.title = element_text(size=15, face="bold"),
    plot.subtitle = element_text(size=13),
    axis.text.x=element_text(size=12),
    axis.text.y=element_text(size=12),
    axis.title.x = element_text(face="bold", size=13),
    axis.title.y = element_text(face="bold", size=13),
    panel.grid.major.y = element_line(color = "#ECF0F1", linewidth = 0.5,
      linetype = "dashed"),
    panel.grid.minor.y = element_blank(),
    panel.grid.major.x = element_blank(),
    panel.background = element_rect(fill = "#FAFAFA", color = NA),
    plot.background = element_rect(fill = "white", color = NA)
  )
```
## Dot Plot (Gráfico de puntos)
```{r}
#| code-fold: true
#| fig-width: 7
#| fig-height: 16
#| fig-align: center

ggplot(data = datos, aes(x = edad_mediana_mujeres, y = reorder(NOMGEO, edad_mediana_mujeres))) + 
  geom_point(color = "#fa937e", size = 3, alpha = 0.8) + 
  geom_segment(aes(x = 0, xend = edad_mediana_mujeres, y = NOMGEO, yend = NOMGEO), color = "#BDC3C7", size = 0.5, alpha = 0.7) + 
  scale_x_continuous( name = "Edad mediana mujeres", breaks = pretty_breaks(n = 6), expand = expansion(mult = c(0, 0.05))) + 
  scale_y_discrete( name = "Municipios", expand = expansion(mult = c(0.05, .05)) ) + 
  labs( title = "Dot Plot - Edad mediana mujeres por Municipio", subtitle = "Estado de Coahuila") + 
  theme_bw()+ 
  theme(
    legend.title = element_text(size=13, face="bold"), 
    legend.text = element_text(size=13), 
    plot.title = element_text(size=15, face="bold"), 
    plot.subtitle = element_text(size=13), 
    axis.text.x=element_text(size=12), 
    axis.text.y=element_text(size=9), 
    axis.title.x = element_text(face="bold", size=13), 
    axis.title.y = element_text(face="bold", size=13), 
    panel.grid.major.y = element_line(color = "#ECF0F1", linewidth = 0.5, linetype = "dashed"), 
    panel.grid.minor.y = element_blank(), 
    panel.grid.major.x = element_blank(), 
    panel.background = element_rect(fill = "#FAFAFA", color = NA), 
    plot.background = element_rect(fill = "white", color = NA)
  )
```
